<#+
    // <copyright company="toamto@石阳">
    //  Copyright © toamto@石阳. All Rights Reserved.
    // </copyright>

    public class TomatoRepositorySy : CSharpTemplate
    {
        private DbTable _model;
        private MyConfig _myConfig;

        public TomatoRepositorySy(DbTable model,MyConfig myConfig)
        {
            List<DbColumn> tempCol=new List<DbColumn>();
            foreach(DbColumn column in model.DbColumns){
                string colName=column.ColumnName.ToLower();
                if(!colName.Contains("isdelete")&&!colName.Contains("gmtcreateuser")&&!colName.Contains("gmtcreatedate")&&!colName.Contains("gmtupdateuser")&&!colName.Contains("gmtupdatedate")&&!colName.Contains("timestamp"))
                {
                    tempCol.Add(column);
                }
            }
            model.DbColumns=tempCol;
            _model = model;
            _myConfig=myConfig;
            _model.TableName=StringHandler.GetCamel(_model.TableName.Replace(_myConfig.TableName,""));
        }
        private string GetIsNull(DbColumn column)
        {
            if(column.CommonType.IsValueType && column.IsNullable){
                return "?";
            }else{
                return "";
            }
        }


        public override string TransformText()
        {
#>
namespace <#=            _myConfig.NameSpace#>.DAL
{
using Microsoft.Practices.Unity;
using Tomato.StandardLib.MyBaseClass;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Tomato.StandardLib.DAL.Base;
using System.Data.Sql;
using System.Data.SqlClient;
using System.Data.Common;
using Tomato.StandardLib.MyModel;
using <#=            _myConfig.NameSpace#>.Model;

    public class <#=            _model.TableName#>Repository : DALPageBaseNew<<#=            _model.TableName#>Model,<#=            _model.TableName#>OutputModel, <#=            _model.TableName#>ViewModel>, I<#=            _model.TableName#>Repository
    {
        [Dependency]
        public IUnityContainer Container { get; set; }

        public <#=            _model.TableName#>Repository() : base("BaseConn", DatabaseMode.SqlClient)
        {

        }

        /// <summary>
        /// 获取数据库操作人
        /// </summary>
        /// <returns>操作人</returns>
        public override string GetOperater()
        {
            return ServiceContext.Current.UserName;
        }


    }

}
<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>